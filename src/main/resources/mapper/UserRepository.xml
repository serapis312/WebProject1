<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.childprj.repository.UserRepository">
    <sql id="SELECT_BASE">
        SELECT
            id "id"
            , username "username"
            , password "password"
            , nickname "nickname"
            , name "name"
            , email "email"
            , regdate "regDate"
        FROM user
        WHERE 1 = 1
    </sql>

    <select id="findById" resultType="com.project.childprj.domain.user.User">
        <include refid="SELECT_BASE"/>
        AND id = #{id}
    </select>

    <select id="findByUsername" resultType="com.project.childprj.domain.user.User">
        <include refid="SELECT_BASE"/>
        AND username = #{username}
    </select>

    <select id="findByEmail" resultType="com.project.childprj.domain.user.User">
        <include refid="SELECT_BASE"/>
        AND email = #{email}
    </select>

    <select id="findByNickName" resultType="com.project.childprj.domain.user.User">
        <include refid="SELECT_BASE"/>
        AND nickname = #{nickname}
    </select>

    <select id="findByNameAndEmail" resultType="com.project.childprj.domain.user.User" parameterType="com.project.childprj.domain.user.NameAndEmail">
        <include refid="SELECT_BASE"/>
        AND name = #{name}
        AND email = #{email}
    </select>

    <select id="findByNameAndUsername" resultType="com.project.childprj.domain.user.User" parameterType="com.project.childprj.domain.user.NameAndUsername">
        <include refid="SELECT_BASE"/>
        AND name = #{name}
        AND username = #{username}
    </select>

    <update id="updatePassword" flushCache="true" parameterType="com.project.childprj.domain.user.User">
        UPDATE user SET password = #{password}
        WHERE id = #{id}
    </update>

    <insert id="save" flushCache="true" parameterType="com.project.childprj.domain.user.User"
            useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        INSERT INTO user (username, password, nickname, name, email)
        VALUES (#{username}, #{password}, #{nickname}, #{name}, #{email})
    </insert>

    <select id="findUserImage" resultType="com.project.childprj.domain.user.UserImage">
        SELECT
            id "id"
            , sourceName "sourceName"
            , fileName "fileName"
            , user_id "user_id"
        FROM user_img
        WHERE user_id = #{user_id}
    </select>

    <insert id="saveImage" flushCache="true" parameterType="com.project.childprj.domain.user.UserImage"
            useGeneratedKeys="true" keyColumn="id" keyProperty="id">
        INSERT INTO user_img (sourceName, fileName, user_id)
        VALUES (#{sourceName}, #{fileName}, #{user_id})
    </insert>

    <delete id="delImage" flushCache="true"  parameterType="com.project.childprj.domain.user.UserImage">
        DELETE FROM user_img WHERE user_id = #{user_id}
    </delete>

    <update id="updateNickname" flushCache="true" parameterType="com.project.childprj.domain.user.Nickname">
        UPDATE user SET nickname = #{nickname}
        WHERE id = #{user_id}
    </update>

    <delete id="delete" flushCache="true" parameterType="com.project.childprj.domain.user.User">
        DELETE FROM user WHERE id = #{id}
    </delete>

</mapper>
